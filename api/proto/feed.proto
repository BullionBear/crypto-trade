syntax = "proto3";

package feed;

// Specify the Go package where this code will be generated.
option go_package = "./api/gen/feed;feed";

import "google/protobuf/empty.proto";

message Kline {
    int64 openTime = 1;
    double open = 2;
    double high = 3;
    double low = 4;
    double close = 5;
    double volume = 6;
    int64 closeTime = 7;
    double quoteAssetVolume = 8;
    int64 tradeNum = 9;
    double takerBuyBaseAssetVolume = 10;
    double takerBuyQuoteAssetVolume = 11;
}

enum Status {
    CREATED = 0;
    OK = 1;
    INITIALIZING = 2;
    ERROR = 3;
    UNKNOWN = 4;
}

// The Feed service definition.
service Feed {
  rpc GetConfig(google.protobuf.Empty) returns (ConfigResponse);

  rpc GetStatus(google.protobuf.Empty) returns (StatusResponse);

  rpc GetSubscriber(google.protobuf.Empty) returns (SubscriberResponse);

  rpc SubscribeKline(google.protobuf.Empty) returns (stream KlineResponse);

  rpc ReadHistoricalKline(ReadKlineRequest) returns (stream KlineResponse);
  // rpc GetHistoricalData(HistoryRequest) returns (HistoryResponse);
}

message ReadKlineRequest {
  int64 start = 1;
  int64 end = 2;
}

message StatusResponse {
  Status status = 1;
  int64 start = 2;
  int64 end = 3;
  int64 timestamp = 4;
  int64 size = 5;
}

message ConfigResponse {
  string symbol = 1;
  int64 length = 2;
}

message SubscriberResponse{
  repeated int64 subscribers = 1;
}

message KlineResponse {
    Kline kline = 1;
}
